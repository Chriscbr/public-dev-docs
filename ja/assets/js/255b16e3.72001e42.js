"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[2808],{9365:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(6540),a=n(53);const l={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,s),hidden:n},t)}},1470:(e,t,n)=>{n.d(t,{A:()=>b});var r=n(8168),a=n(6540),l=n(53),s=n(3104),c=n(6347),i=n(7485),o=n(1682),u=n(9466);function h(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??h(n);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function y(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,c.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=p(e),[s,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!y({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[i,o]=g({queryString:n,groupId:r}),[h,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,u.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),d=(()=>{const e=i??h;return y({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{d&&c(d)}),[d]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!y({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),o(e),m(e)}),[o,m,l]),tabValues:l}}var d=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:n,selectedValue:c,selectValue:i,tabValues:o}=e;const u=[],{blockElementScrollPositionUntilNextRender:h}=(0,s.a_)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),r=o[n].value;r!==c&&(h(t),i(r))},y=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},t)},o.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:c===t?0:-1,"aria-selected":c===t,key:t,ref:e=>u.push(e),onKeyDown:y,onClick:p},s,{className:(0,l.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":c===t})}),n??t)})))}function C(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=m(e);return a.createElement("div",{className:(0,l.A)("tabs-container",f.tabList)},a.createElement(N,(0,r.A)({},e,t)),a.createElement(C,(0,r.A)({},e,t)))}function b(e){const t=(0,d.A)();return a.createElement(k,(0,r.A)({key:String(t)},e))}},1441:(e,t,n)=>{n(6540)},5347:(e,t,n)=>{n.d(t,{r:()=>c});var r=n(1470),a=n(9365),l=n(2355),s=n(6540);const c=e=>{let{js:t,python:n,java:c,kotlin:i,go:o,csharp:u,php:h,rust:p,ruby:y,elixir:g,swift:m,dart:d,cli:f}=e;return t||n||c||i||o||u||h||p||y||g||m||d||f?s.createElement(r.A,null,t&&s.createElement(a.A,{value:"js",label:"JavaScript"},s.createElement(l.A,{language:"js"},t)),n&&s.createElement(a.A,{value:"python",label:"Python"},s.createElement(l.A,{language:"python"},n)),c&&s.createElement(a.A,{value:"java",label:"Java"},s.createElement(l.A,{language:"java"},c)),i&&s.createElement(a.A,{value:"kotlin",label:"Kotlin"},s.createElement(l.A,{language:"kotlin"},i)),o&&s.createElement(a.A,{value:"go",label:"Go"},s.createElement(l.A,{language:"go"},o)),u&&s.createElement(a.A,{value:"csharp",label:"C#"},s.createElement(l.A,{language:"csharp"},u)),h&&s.createElement(a.A,{value:"php",label:"PHP"},s.createElement(l.A,{language:"php"},h)),p&&s.createElement(a.A,{value:"rust",label:"Rust"},s.createElement(l.A,{language:"rust"},p)),y&&s.createElement(a.A,{value:"ruby",label:"Ruby"},s.createElement(l.A,{language:"ruby"},y)),g&&s.createElement(a.A,{value:"elixir",label:"Elixir"},s.createElement(l.A,{language:"elixir"},g)),m&&s.createElement(a.A,{value:"swift",label:"Swift"},s.createElement(l.A,{language:"swift"},m)),d&&s.createElement(a.A,{value:"dart",label:"Dart"},s.createElement(l.A,{language:"dart"},d)),f&&s.createElement(a.A,{value:"cli",label:"CLI"},s.createElement(l.A,{language:"cli"},f))):null}},3260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(8168),a=(n(6540),n(5680)),l=(n(1441),n(5347));const s={sidebar_position:6,title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",pagination_prev:null,sidebar_label:"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","\u8aac\u660e":"\u77e5\u3063\u3066\u304a\u304f\u3079\u304dAPI\u30b3\u30fc\u30eb\u3092\u5b66\u3093\u3067\u3001Momento Cache\u3068\u5171\u306b\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002"},c="Momento Cache API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9",i={unversionedId:"cache/develop/api-reference/index",id:"cache/develop/api-reference/index",title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",description:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/cache/develop/api-reference/index.mdx",sourceDirName:"cache/develop/api-reference",slug:"/cache/develop/api-reference/",permalink:"/ja/cache/develop/api-reference/",draft:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/api-reference/index.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",pagination_prev:null,sidebar_label:"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","\u8aac\u660e":"\u77e5\u3063\u3066\u304a\u304f\u3079\u304dAPI\u30b3\u30fc\u30eb\u3092\u5b66\u3093\u3067\u3001Momento Cache\u3068\u5171\u306b\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002"},sidebar:"tutorialSidebar",next:{title:"Dictionary",permalink:"/ja/cache/develop/api-reference/dictionary-collections"}},o={},u=[{value:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI",id:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebapi",level:2},{value:"Create cache",id:"create-cache",level:3},{value:"Delete cache",id:"delete-cache",level:3},{value:"List caches",id:"list-caches",level:3},{value:"Flush cache",id:"flush-cache",level:3},{value:"\u30c7\u30fc\u30bfAPI",id:"\u30c7\u30fc\u30bfapi",level:2},{value:"Set",id:"set",level:3},{value:"Get",id:"get",level:3},{value:"Delete",id:"delete",level:3},{value:"Increment",id:"increment",level:3},{value:"Ping",id:"ping",level:3},{value:"ItemGetType",id:"itemgettype",level:3},{value:"KeyExists",id:"keyexists",level:3},{value:"KeysExist",id:"keysexist",level:3},{value:"SetIfNotExists",id:"setifnotexists",level:3},{value:"\u751f\u5b58\u6642\u9593(TTL)API",id:"\u751f\u5b58\u6642\u9593ttlapi",level:2},{value:"UpdateTtl",id:"updatettl",level:3},{value:"IncreaseTtl",id:"increasettl",level:3},{value:"DecreaseTtl",id:"decreasettl",level:3},{value:"ItemGetTtl",id:"itemgetttl",level:3},{value:"\u8a8d\u8a3cAPI",id:"\u8a8d\u8a3capi",level:2},{value:"GenerateAuthToken",id:"generateauthtoken",level:3},{value:"RefreshAuthToken",id:"refreshauthtoken",level:3},{value:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b",id:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b",level:3}],h={toc:u},p="wrapper";function y(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.A)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"momento-cache-api-\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9"},"Momento Cache API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9"),(0,a.yg)("h2",{id:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebapi"},"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI"),(0,a.yg)("p",null,"\u3053\u308c\u3089\u306eAPI\u30e1\u30bd\u30c3\u30c9\u306f\u3001cache\u3092\u7ba1\u7406\u30fb\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("h3",{id:"create-cache"},"Create cache"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305f\u540d\u524d\u306ecache\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,"\u5c5e\u6027:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"\u4f5c\u6210\u3059\u308bcache\u306e\u540d\u524d\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.createCache(cacheName);\nif (result instanceof CreateCache.Success) {\n  console.log(`Cache '${cacheName}' created`);\n} else if (result instanceof CreateCache.AlreadyExists) {\n  console.log(`Cache '${cacheName}' already exists`);\n} else if (result instanceof CreateCache.Error) {\n  throw new Error(\n    `An error occurred while attempting to create cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:'create_cache_response = await cache_client.create_cache("test-cache")\nmatch create_cache_response:\n    case CreateCache.Success():\n        print("Cache \'test-cache\' created")\n    case CreateCache.CacheAlreadyExists():\n        print("Cache \'test-cache\' already exists.")\n    case CreateCache.Error() as error:\n        print(f"An error occurred while attempting to create cache \'test-cache\': {error.message}")\n\n',java:'final CacheCreateResponse response = cacheClient.createCache("test-cache").join();\nif (response instanceof CacheCreateResponse.Success) {\n  System.out.println("Cache \'test-cache\' created");\n} else if (response instanceof CacheCreateResponse.Error error) {\n  if (error.getCause() instanceof AlreadyExistsException) {\n    System.out.println("Cache \'test-cache\' already exists");\n  } else {\n    throw new RuntimeException(\n        "An error occurred while attempting to create cache \'test-cache\': "\n            + error.getErrorCode(),\n        error);\n  }\n}',kotlin:'when (val response = cacheClient.createCache("test-cache")) {\n    is CacheCreateResponse.Success -> println("Cache \'test-cache\' created")\n    is CacheCreateResponse.AlreadyExists -> println("Cache \'test-cache\' already exists")\n    is CacheCreateResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to create cache \'test-cache\': ${response.errorCode}", response\n    )\n}',go:'_, err := client.CreateCache(ctx, &momento.CreateCacheRequest{\n\tCacheName: "cache-name",\n})\nif err != nil {\n\tpanic(err)\n}',csharp:'var result = await cacheClient.CreateCacheAsync("test-cache");\nif (result is CreateCacheResponse.Success)\n{\n    Console.WriteLine("Cache \'test-cache\' created");\n}\nelse if (result is CreateCacheResponse.CacheAlreadyExists)\n{\n    Console.WriteLine("Cache \'test-cache\' already exists");\n}\nelse if (result is CreateCacheResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to create cache \'test-cache\': {error.ErrorCode}: {error}");\n}\n',php:'\n$create_cache_response = $cache_client->createCache("test-cache");\nif ($create_cache_response->asSuccess()) {\n    print("Cache \'test-cache\' created\\n");\n} elseif ($create_cache_response->asAlreadyExists()) {\n    print("Cache \'test-cache\' already exists\\n");\n} elseif ($err = $create_cache_response->asError()) {\n    print("An error occurred while attempting to create \'test-cache\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:"",ruby:"",elixir:'case Momento.CacheClient.create_cache(client, "test-cache") do\n  {:ok, _} ->\n    IO.puts("Cache \'test-cache\' created")\n\n  :already_exists ->\n    :ok\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to create cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.createCache(cacheName: cacheName)\nswitch result {\ncase .alreadyExists(_):\n    print("Cache already exists!")\ncase .success(_):\n    print("Successfully created the cache!")\ncase .error(let err):\n    print("Unable to create the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.createCache("test-cache");\nswitch (result) {\n  case CreateCacheAlreadyExists():\n    print("Cache already exists");\n  case CreateCacheError():\n    print("Error creating cache: $result");\n  case CreateCacheSuccess():\n    print("Successfully created the cache");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"delete-cache"},"Delete cache"),(0,a.yg)("p",null,"cache\u3092\u524a\u9664\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,"\u5c5e\u6027:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"\u524a\u9664\u3059\u308bcache\u306e\u540d\u524d\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.deleteCache(cacheName);\nif (result instanceof DeleteCache.Success) {\n  console.log(`Cache '${cacheName}' deleted`);\n} else if (result instanceof DeleteCache.Error) {\n  throw new Error(\n    `An error occurred while attempting to delete cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:'delete_cache_response = await cache_client.delete_cache("test-cache")\nmatch delete_cache_response:\n    case DeleteCache.Success():\n        print("Cache \'test-cache\' deleted")\n    case DeleteCache.Error() as error:\n        raise Exception(f"An error occurred while attempting to delete \'test-cache\': {error.message}")\n\n',java:'final CacheDeleteResponse response = cacheClient.deleteCache("test-cache").join();\nif (response instanceof CacheDeleteResponse.Success) {\n  System.out.println("Cache \'test-cache\' deleted");\n} else if (response instanceof CacheDeleteResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to delete cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.deleteCache("test-cache")) {\n    is CacheDeleteResponse.Success -> println("Cache \'test-cache\' deleted")\n    is CacheDeleteResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to delete cache \'test-cache\': ${response.errorCode}", response\n    )\n}',go:'_, err := client.DeleteCache(ctx, &momento.DeleteCacheRequest{\n\tCacheName: "cache-name",\n})\nif err != nil {\n\tpanic(err)\n}',csharp:'var result = await cacheClient.DeleteCacheAsync("test-cache");\nif (result is DeleteCacheResponse.Success)\n{\n    Console.WriteLine("Cache \'test-cache\' deleted");\n}\nelse if (result is DeleteCacheResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to delete cache \'test-cache\': {error.ErrorCode}: {error}");\n}\n',php:"\n$delete_cache_response = $cache_client->deleteCache('test-cache');\nif ($err = $delete_cache_response->asError()) {\n    print(\"An error occurred while attempting to delete 'test-cache': {$err->errorCode()} - {$err->message()}\\n\");\n} else {\n    print(\"Cache 'test-cache' deleted\\n\");\n}",rust:"",ruby:"",elixir:'case Momento.CacheClient.delete_cache(client, "test-cache") do\n  {:ok, _} ->\n    IO.puts("Cache \'test-cache\' deleted")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to delete cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.deleteCache(cacheName: cacheName)\nswitch result {\ncase .success(let success):\n    print("Successfully deleted the cache")\ncase .error(let err):\n    print("Unable to delete cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.deleteCache("test-cache");\nswitch (result) {\n  case DeleteCacheError():\n    print("Error deleting cache: $result");\n    exit(1);\n  case DeleteCacheSuccess():\n    print("Successfully deleted cache");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"list-caches"},"List caches"),(0,a.yg)("p",null,"\u3059\u3079\u3066\u306ecache\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"nextToken"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u30da\u30fc\u30b8\u30cd\u30fc\u30b7\u30e7\u30f3\u7528\u306e \u30c8\u30fc\u30af\u30f3\u3067\u3059\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.listCaches();\nif (result instanceof ListCaches.Success) {\n  console.log(\n    `Caches:\\n${result\n      .getCaches()\n      .map(c => c.getName())\n      .join('\\n')}\\n\\n`\n  );\n} else if (result instanceof ListCaches.Error) {\n  throw new Error(`An error occurred while attempting to list caches: ${result.errorCode()}: ${result.toString()}`);\n}",python:'print("Listing caches:")\nlist_caches_response = await cache_client.list_caches()\nmatch list_caches_response:\n    case ListCaches.Success() as success:\n        for cache_info in success.caches:\n            print(f"- {cache_info.name!r}")\n    case ListCaches.Error() as error:\n        raise Exception(f"An error occurred while attempting to list caches: {error.message}")\n\n',java:'final CacheListResponse response = cacheClient.listCaches().join();\nif (response instanceof CacheListResponse.Success success) {\n  final String caches =\n      success.getCaches().stream().map(CacheInfo::name).collect(Collectors.joining("\\n"));\n  System.out.println("Caches:\\n" + caches);\n} else if (response instanceof CacheListResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to list caches: " + error.getErrorCode(), error);\n}',kotlin:'when (val response: CacheListResponse = cacheClient.listCaches()) {\n    is CacheListResponse.Success -> {\n        val caches: String = response.caches.joinToString("\\n") { cacheInfo -> cacheInfo.name }\n        println("Caches:\\n$caches")\n    }\n\n    is CacheListResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to list caches: ${response.errorCode}", response\n    )\n}',go:'resp, err := client.ListCaches(ctx, &momento.ListCachesRequest{})\nif err != nil {\n\tpanic(err)\n}\n\nswitch r := resp.(type) {\ncase *responses.ListCachesSuccess:\n\tlog.Printf("Found caches %+v", r.Caches())\n}',csharp:'var result = await cacheClient.ListCachesAsync();\nif (result is ListCachesResponse.Success success)\n{\n    Console.WriteLine($"Caches:\\n{string.Join("\\n", success.Caches.Select(c => c.Name))}\\n\\n");\n}\nelse if (result is ListCachesResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to list caches: {error.ErrorCode}: {error}");\n}\n',php:'\n$list_caches_response = $cache_client->listCaches();\nif ($caches = $list_caches_response->asSuccess()) {\n    print("Found caches:\\n");\n    foreach ($caches as $cache) {\n        $cache_name = $cache->name();\n        print("- $cache_name\\n");\n    }\n} elseif ($err = $list_caches_response->asError()) {\n    print("An error occurred while attempting to list caches: {$err->errorCode()} - {$err->message()}\\n");\n}',rust:"",ruby:"",elixir:'case Momento.CacheClient.list_caches(client) do\n  {:ok, result} ->\n    IO.puts("Caches:")\n    IO.inspect(result.caches)\n\n  {:error, error} ->\n    IO.puts("An error occurred while attempting to list caches: #{error.error_code}")\n    raise error\nend',swift:'let result = await cacheClient.listCaches()\nswitch result {\ncase .success(let success):\n    print("Successfully fetched list of caches: \\(success.caches.map { $0.name })")\ncase .error(let err):\n    print("Unable to fetch list of caches: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.listCaches();\nswitch (result) {\n  case ListCachesError():\n    print("Error listing caches: $result");\n  case ListCachesSuccess():\n    print("Successfully listed caches: ${result.cacheNames}");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"flush-cache"},"Flush cache"),(0,a.yg)("p",null,"cache\u306e\u5168\u30c7\u30fc\u30bf\u3092\u30d5\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,"\u5c5e\u6027:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308bcache\u306e\u540d\u524d\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.flushCache(cacheName);\nif (result instanceof CacheFlush.Success) {\n  console.log(`Cache '${cacheName}' flushed`);\n} else if (result instanceof CacheFlush.Error) {\n  throw new Error(\n    `An error occurred while attempting to flush cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:'final CacheFlushResponse response = cacheClient.flushCache("test-cache").join();\nif (response instanceof CacheFlushResponse.Success) {\n  System.out.println("Cache \'test-cache\' flushed");\n} else if (response instanceof CacheFlushResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to flush cache \'test-cache\': " + error.getErrorCode(),\n      error);\n}',kotlin:"",go:"",csharp:'var result = await cacheClient.FlushCacheAsync("test-cache");\nif (result is FlushCacheResponse.Success)\n{\n    Console.WriteLine("Cache \'test-cache\' flushed");\n}\nelse if (result is FlushCacheResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to flush cache \'test-cache\': {error.ErrorCode}: {error}");\n}\n',php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("p",null,":::\u30d2\u30f3\u30c8"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"#delete-cache"},"Delete Cache"),"\u3001",(0,a.yg)("a",{parentName:"p",href:"#create-cache"},"Create Cache"),"\u306e\u9806\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6a21\u5023\u3067\u304d\u307e\u3059\u304c\u3001FlushCache API\u306fcache\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\u3001\u30c7\u30fc\u30bf\u306e\u307f\u3092\u524a\u9664\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,":::"),(0,a.yg)("h2",{id:"\u30c7\u30fc\u30bfapi"},"\u30c7\u30fc\u30bfAPI"),(0,a.yg)("p",null,"\u3053\u308c\u3089\u306eAPI\u30e1\u30bd\u30c3\u30c9\u306f\u3001cache\u5185\u306e\u30c7\u30fc\u30bf\u3092\u76f4\u63a5\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("h3",{id:"set"},"Set"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305f\u751f\u5b58\u6642\u9593(TTL)\u79d2\u306e\u5024\u3092cache\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306ekey\u306e\u5024\u304c\u3059\u3067\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u5024\u3067\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"[]Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u3092\u8ffd\u52a0\u3059\u308bkey\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"value"),(0,a.yg)("td",{parentName:"tr",align:null},"[]Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"\u683c\u7d0d\u3055\u308c\u308b\u5024\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"ttlSeconds"),(0,a.yg)("td",{parentName:"tr",align:null},"int"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306eTTL\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.set(cacheName, 'test-key', 'test-value');\nif (result instanceof CacheSet.Success) {\n  console.log(\"Key 'test-key' stored successfully\");\n} else if (result instanceof CacheSet.Error) {\n  throw new Error(\n    `An error occurred while attempting to store key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:'set_response = await cache_client.set("test-cache", "test-key", "test-value")\nmatch set_response:\n    case CacheSet.Success():\n        print("Key \'test-key\' stored successfully")\n    case CacheSet.Error() as error:\n        raise Exception(\n            f"An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': {error.message}"\n        )\n\n',java:'final SetResponse response = cacheClient.set("test-cache", "test-key", "test-value").join();\nif (response instanceof SetResponse.Success) {\n  System.out.println("Key \'test-key\' stored successfully");\n} else if (response instanceof SetResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.set("test-cache", "test-key", "test-value")) {\n    is SetResponse.Success -> println("Key \'test-key\' stored successfully")\n    is SetResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': ${response.errorCode}",\n        response\n    )\n}',go:'key := uuid.NewString()\nvalue := uuid.NewString()\nlog.Printf("Setting key: %s, value: %s\\n", key, value)\n_, err := client.Set(ctx, &momento.SetRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String(key),\n\tValue:     momento.String(value),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tvar momentoErr momento.MomentoError\n\tif errors.As(err, &momentoErr) {\n\t\tif momentoErr.Code() != momento.TimeoutError {\n\t\t\t// this would represent a client-side timeout, and you could fall back to your original data source\n\t\t} else {\n\t\t\tpanic(err)\n\t\t}\n\t}\n}',csharp:'var result = await cacheClient.SetAsync("test-cache", "test-key", "test-value");\nif (result is CacheSetResponse.Success)\n{\n    Console.WriteLine("Key \'test-key\' stored successfully");\n}\nelse if (result is CacheSetResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': {error.ErrorCode}: {error}");\n}\n',php:'$set_response = $cache_client->set("test-cache", "test-key", "test-value");\nif ($set_response->asSuccess()) {\n    print("Key \'test-key\' stored successfully\\n");\n} elseif ($err = $set_response->asError()) {\n    print("An error occurred while attempting to store \'test-key\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:"",ruby:"",elixir:'case Momento.CacheClient.set(client, "test-cache", "test-key", "test-value") do\n  {:ok, _} ->\n    IO.puts("Key \'test-key\' stored successfully")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.set(\n    cacheName: cacheName,\n    key: "key",\n    value: "value"\n)\nswitch result {\ncase .success(_):\n    print("Successfully set item in the cache")\ncase .error(let err):\n    print("Unable to set item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.set("test-cache", "test-key", "test-value");\nswitch (result) {\n  case SetError():\n    print("Error setting key: $result");\n    exit(1);\n  case SetSuccess():\n    print("Successfully set item in the cache");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"get"},"Get"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308bcache\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"[]Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3059\u308bkey\u3067\u3059\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.get(cacheName, 'test-key');\nif (result instanceof CacheGet.Hit) {\n  console.log(`Retrieved value for key 'test-key': ${result.valueString()}`);\n} else if (result instanceof CacheGet.Miss) {\n  console.log(`Key 'test-key' was not found in cache '${cacheName}'`);\n} else if (result instanceof CacheGet.Error) {\n  throw new Error(\n    `An error occurred while attempting to get key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"get_response = await cache_client.get(\"test-cache\", \"test-key\")\nmatch get_response:\n    case CacheGet.Hit() as hit:\n        print(f\"Retrieved value for key 'test-key': {hit.value_string}\")\n    case CacheGet.Miss():\n        print(\"Key 'test-key' was not found in cache 'test-cache'\")\n    case CacheGet.Error() as error:\n        raise Exception(\n            f\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {error.message}\"\n        )\n\n",java:"final GetResponse response = cacheClient.get(\"test-cache\", \"test-key\").join();\nif (response instanceof GetResponse.Hit hit) {\n  System.out.println(\"Retrieved value for key 'test-key': \" + hit.valueString());\n} else if (response instanceof GetResponse.Miss) {\n  System.out.println(\"Key 'test-key' was not found in cache 'test-cache'\");\n} else if (response instanceof GetResponse.Error error) {\n  throw new RuntimeException(\n      \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': \"\n          + error.getErrorCode(),\n      error);\n}",kotlin:"when (val response = cacheClient.get(\"test-cache\", \"test-key\")) {\n    is GetResponse.Hit -> println(\"Retrieved value for key 'test-key': ${response.value}\")\n    is GetResponse.Miss -> println(\"Key 'test-key' was not found in cache 'test-cache'\")\n    is GetResponse.Error -> throw RuntimeException(\n        \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': ${response.errorCode}\",\n        response\n    )\n}",go:'key := uuid.NewString()\nresp, err := client.Get(ctx, &momento.GetRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String(key),\n})\nif err != nil {\n\tpanic(err)\n}\n\nswitch r := resp.(type) {\ncase *responses.GetHit:\n\tlog.Printf("Lookup resulted in cache HIT. value=%s\\n", r.ValueString())\ncase *responses.GetMiss:\n\tlog.Printf("Look up did not find a value key=%s", key)\n}',csharp:"var result = await cacheClient.GetAsync(\"test-cache\", \"test-key\");\nif (result is CacheGetResponse.Hit hit)\n{\n    Console.WriteLine($\"Retrieved value for key 'test-key': {hit.ValueString}\");\n}\nelse if (result is CacheGetResponse.Miss)\n{\n    Console.WriteLine(\"Key 'test-key' was not found in cache 'test-cache'\");\n}\nelse if (result is CacheGetResponse.Error error)\n{\n    throw new Exception($\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {error.ErrorCode}: {error}\");\n}\n",php:"\n$get_response = $cache_client->get(\"test-cache\", \"test-key\");\nif ($hit = $get_response->asHit()) {\n    print(\"Retrieved value for key 'test-key': {$hit->valueString()}\\n\");\n} elseif ($get_response->asMiss()) {\n    print(\"Key 'test-key' was not found in cache 'test-cache'\\n\");\n} elseif ($err = $get_response->asError()) {\n    print(\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {$err->errorCode()} - {$err->message()}\\n\");\n}",rust:"",ruby:"",elixir:"case Momento.CacheClient.get(client, \"test-cache\", \"test-key\") do\n  {:ok, hit} ->\n    IO.puts(\"Retrieved value for key 'test-key': #{hit.value}\")\n\n  :miss ->\n    IO.puts(\"Key 'test-key' was not found in cache 'test-cache'\")\n\n  {:error, error} ->\n    IO.puts(\n      \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': #{error.error_code}\"\n    )\n\n    raise error\nend",swift:'let result = await cacheClient.get(\n    cacheName: cacheName,\n    key: "key"\n)\nswitch result {\ncase .hit(let hit):\n    print("Cache hit: \\(hit.valueString)")\ncase .miss(_):\n    print("Cache miss")\ncase .error(let err):\n    print("Unable to get item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.get("test-cache", "test-key");\nswitch (result) {\n  case GetMiss():\n    print("Key was not found in cache.");\n  case GetError():\n    print("Error getting key: $result");\n  case GetHit():\n    print("Successfully got item from cache: ${result.value}");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"delete"},"Delete"),(0,a.yg)("p",null,"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308bcache\u5024\u3092\u524a\u9664\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"[]Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u3092\u524a\u9664\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3059\u308bkey\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.delete(cacheName, 'test-key');\nif (result instanceof CacheDelete.Success) {\n  console.log(\"Key 'test-key' deleted successfully\");\n} else if (result instanceof CacheDelete.Error) {\n  throw new Error(\n    `An error occurred while attempting to delete key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:'delete_response = await cache_client.delete("test-cache", "test-key")\nmatch delete_response:\n    case CacheDelete.Success():\n        print("Key \'test-key\' deleted successfully")\n    case CacheDelete.Error() as error:\n        raise Exception(\n            f"An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {error.message}"\n        )\n\n',java:'final DeleteResponse response = cacheClient.delete("test-cache", "test-key").join();\nif (response instanceof DeleteResponse.Success) {\n  System.out.println("Key \'test-key\' deleted successfully");\n} else if (response instanceof DeleteResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.delete("test-cache", "test-key")) {\n    is DeleteResponse.Success -> println("Key \'test-key\' deleted successfully")\n    is DeleteResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': ${response.errorCode}",\n        response\n    )\n}',go:'key := uuid.NewString()\n_, err := client.Delete(ctx, &momento.DeleteRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String(key),\n})\nif err != nil {\n\tpanic(err)\n}',csharp:'var result = await cacheClient.DeleteAsync("test-cache", "test-key");\nif (result is CacheDeleteResponse.Success)\n{\n    Console.WriteLine("Key \'test-key\' deleted successfully");\n}\nelse if (result is CacheDeleteResponse.Error error)\n{\n    throw new Exception($"An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {error.ErrorCode}: {error}");\n}\n',php:'$delete_response = $cache_client->delete("test-cache", "test-key");\nif ($delete_response->asSuccess()) {\n    print("Key \'test-key\' deleted successfully\\n");\n} elseif ($err = $delete_response->asError()) {\n    print("An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:"",ruby:"",elixir:'case Momento.CacheClient.delete(client, "test-cache", "test-key") do\n  {:ok, _} ->\n    IO.puts("Key \'test-key\' deleted successfully")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.delete(\n    cacheName: cacheName,\n    key: "key"\n)\nswitch result {\ncase .success(_):\n    print("Successfully deleted item in the cache")\ncase .error(let err):\n    print("Unable to delete item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.delete("test-cache", "test-key");\nswitch (result) {\n  case DeleteError():\n    print("Error deleting key: $result");\n    exit(1);\n  case DeleteSuccess():\n    print("Successfully deleted key from cache");\n}',cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"increment"},"Increment"),(0,a.yg)("p",null,"\u65e2\u5b58\u306e\u5024\u304c\u30d9\u30fc\u30b910(10\u9032\u6cd5)\u306e\u6574\u6570\u3092\u8868\u3059UTF-8\u6587\u5b57\u5217\u3067\u3042\u308b\u5834\u5408\u306b\u9650\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u8ffd\u52a0 \u3057\u307e\u3059\u3002\u3082\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066\u8a2d\u5b9a\u3057\u307e \u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"field"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u5834\u5408\u306e\u5bfe\u8c61\u3068\u306a\u308bkey\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"amount"),(0,a.yg)("td",{parentName:"tr",align:null},"Integer"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u306b\u52a0\u7b97\u3059\u308b\u91cf\u3067\u3059\u3002\u6b63\u306e\u5024\u3001\u8ca0\u306e\u5024\u3001\u307e\u305f\u306f\u30bc\u30ed\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u3002")))),(0,a.yg)("p",null,":::\u6ce8\u8a18"),(0,a.yg)("p",null,"\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u305f\u5024\u306f\u3001-9223372036854775808\u304b\u30899223372036854775807\u306e\u9593\u3001\u3064\u307e\u308a64\u30d3\u30c3 \u30c8\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u914d\u5217\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("p",null,":::"),(0,a.yg)(l.r,{js:"await cacheClient.set(cacheName, 'test-key', '10');\nconst result = await cacheClient.increment(cacheName, 'test-key', 1);\nif (result instanceof CacheIncrement.Success) {\n  console.log(`Key 'test-key' incremented successfully. New value in key test-key: ${result.valueNumber()}`);\n} else if (result instanceof CacheIncrement.Error) {\n  throw new Error(\n    `An error occurred while attempting to increment the value of key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:'cacheClient.set("test-cache", "test-key", "10").join();\nfinal IncrementResponse response = cacheClient.increment("test-cache", "test-key", 1).join();\nif (response instanceof IncrementResponse.Success success) {\n  System.out.println(\n      "Key \'test-key\' incremented successfully. New value in key test-key: "\n          + success.valueNumber());\n} else if (response instanceof IncrementResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to increment the value of key \'test-key\' from cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:"",go:'resp, err := client.Increment(ctx, &momento.IncrementRequest{\n\tCacheName: "cache-name",\n\tField:     momento.String("key"),\n\tAmount:    1,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.IncrementSuccess:\n\tlog.Printf("Incremented value is %d\\n", r.Value())\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"ping"},"Ping"),(0,a.yg)("p",null,"\u30b5\u30fc\u30d0\u306bping\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\u3053\u306eAPI\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u306b\u6b63\u5e38\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f \u3081\u306e\u63a5\u7d9a\u6027\u306e\u30c1\u30a7\u30c3\u30af\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Success"),(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"itemgettype"},"ItemGetType"),(0,a.yg)("p",null,"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u3001\u5bfe\u5fdc\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u578b(SCALAR\u3001DICTIONARY\u3001LIST\u306a \u3069)\u3092\u8fd4\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"item\u306e\u578b\u304c\u8fd4\u5374\u3055\u308c\u308b\u3079\u304dkey\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Cache hit")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"\u578b()"),": enum: SCALAR, DICTIONARY, SET, LIST, SORTED_SET")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Cache miss")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Cache error"),(0,a.yg)("p",{parentName:"li"},"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")))),(0,a.yg)(l.r,{js:"const result = await cacheClient.itemGetType(cacheName, 'test-key');\nif (result instanceof CacheItemGetType.Hit) {\n  console.log(`Item type retrieved successfully: ${ItemType[result.itemType()]}`);\n} else if (result instanceof CacheItemGetType.Miss) {\n  console.log(\"Key 'test-key' was not found in cache '${cacheName}'\");\n} else if (result instanceof CacheItemGetType.Error) {\n  throw new Error(\n    `An error occurred while attempting to get the type of key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.ItemGetType(ctx, &momento.ItemGetTypeRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String("key"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.ItemGetTypeHit:\n\tlog.Printf("Type of item is %v\\n", r.Type())\ncase *responses.ItemGetTypeMiss:\n\tlog.Printf("Item does not exist in cache\\n")\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"keyexists"},"KeyExists"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305fkey\u304ccache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bkey\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Success")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"exists()"),": Bool")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"const result = await cacheClient.keyExists(cacheName, 'test-key');\nif (result instanceof CacheKeyExists.Success) {\n  console.log(\"Does 'test-key' exists in the cache?\", result.exists());\n} else if (result instanceof CacheKeyExists.Error) {\n  throw new Error(\n    `An error occurred while attempting to call keyExists on key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"keysexist"},"KeysExist"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305fkey(\u8907\u6570)\u304ccache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"keys"),(0,a.yg)("td",{parentName:"tr",align:null},"String[] ","|"," Byte[]"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bkey(\u8907\u6570)\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Success")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"exists()"),": Bool[]")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"const result = await cacheClient.keysExist(cacheName, ['test-key1', 'test-key2']);\nif (result instanceof CacheKeysExist.Success) {\n  console.log(\"Do 'test-key1' and 'test-key2' exist in the cache?\", result.exists());\n} else if (result instanceof CacheKeysExist.Error) {\n  throw new Error(\n    `An error occurred while attempting to call keysExist on keys 'test-key1' and 'test-key2' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'keys := []momento.Value{momento.String("key1"), momento.String("key2")}\nresp, err := client.KeysExist(ctx, &momento.KeysExistRequest{\n\tCacheName: "cache-name",\n\tKeys:      keys,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.KeysExistSuccess:\n\tlog.Printf("Does each key exist in cache?\\n")\n\tfor _, exists := range r.Exists() {\n\t\tlog.Printf("key exists=%v\\n", exists)\n\t}\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"setifnotexists"},"SetIfNotExists"),(0,a.yg)("p",null,"\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u3001\u6307\u5b9a\u3055\u308c\u305fkey\u3092\u6301\u3064cache\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Bytes"),(0,a.yg)("td",{parentName:"tr",align:null},"\u8a2d\u5b9a\u3055\u308c\u308bkey\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"value"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Bytes"),(0,a.yg)("td",{parentName:"tr",align:null},"\u683c\u7d0d\u3055\u308c\u308b\u5024\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"ttlSeconds"),(0,a.yg)("td",{parentName:"tr",align:null},"Duration"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306b\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593 (TTL)\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Stored"),(0,a.yg)("li",{parentName:"ul"},"NotStored"),(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"const result = await cacheClient.setIfNotExists(cacheName, 'test-key', 'test-field');\nif (result instanceof CacheSetIfNotExists.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfNotExists.NotStored) {\n  console.log(`Key 'test-key' already exists in cache '${cacheName}', so we did not overwrite it`);\n} else if (result instanceof CacheSetIfNotExists.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfNotExists for the key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"final SetIfNotExistsResponse response =\n    cacheClient.setIfNotExists(\"test-cache\", \"test-key\", \"test-field\").join();\nif (response instanceof SetIfNotExistsResponse.Stored) {\n  System.out.println(\"Field 'test-field' set in key 'test-key'\");\n} else if (response instanceof SetIfNotExistsResponse.NotStored) {\n  System.out.println(\n      \"Key 'test-key' already exists in cache 'test-cache', so we did not overwrite it\");\n} else if (response instanceof SetIfNotExistsResponse.Error error) {\n  throw new RuntimeException(\n      \"An error occurred while attempting to call setIfNotExists for the key 'test-key' in cache 'test-cache': \"\n          + error.getErrorCode(),\n      error);\n}",kotlin:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h2",{id:"\u751f\u5b58\u6642\u9593ttlapi"},"\u751f\u5b58\u6642\u9593(TTL)API"),(0,a.yg)("p",null,"\u3053\u308c\u3089\u306eAPI\u306f\u3001\u3059\u3079\u3066\u306e\u578b\u306ecache\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("h3",{id:"updatettl"},"UpdateTtl"),(0,a.yg)("p",null,"cache\u30a2\u30a4\u30c6\u30e0\u306eTTL\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024(\u79d2)\u3067\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Bytes"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u306eTTL\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5bfe\u8c61\u306ekey\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"ttl"),(0,a.yg)("td",{parentName:"tr",align:null},"Duration"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u3067\u4e0a\u66f8\u304d\u3057\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002")))),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.UpdateTtl(ctx, &momento.UpdateTtlRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.UpdateTtlSet:\n\tlog.Printf("Successfully updated TTL for key\\n")\ncase *responses.UpdateTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"increasettl"},"IncreaseTtl"),(0,a.yg)("p",null,"TTL\u3092\u5897\u52a0\u3055\u305b\u308b\u5834\u5408\u306e\u307f\u3001key\u306eTTL\u79d2\u6570\u3092\u6307\u5b9a\u3055\u308c\u305f\u5024\u306b\u5897\u3084\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,"\u4f8b"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"TTL\u304c5\u79d2\u3067\u30016\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u65b0\u3057\u3044TTL\u306f6\u79d2\u306b\u306a\u308a\u307e\u3059\u3002"),(0,a.yg)("li",{parentName:"ul"},"TTL\u304c5\u79d2\u3067\u30013\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001TTL\u306f\u5897\u52a0\u3057\u307e\u305b\u3093\u3002\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                     |\n| --------- | ------ | ----------------------------------------------- |\n| cacheName | String | cache\u306e\u540d\u524d\u3002                           |                              |\n| key       | String ","|"," Bytes | \u5024\u306eTTL\u3092\u5897\u52a0\u3055\u305b\u308bkey\u306e\u6307\u5b9a\u3002 |\n| ttl       | Duration | \u5897\u52a0\u3057\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |")),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.IncreaseTtl(ctx, &momento.IncreaseTtlRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.IncreaseTtlSet:\n\tlog.Printf("Successfully increased TTL for key\\n")\ncase *responses.IncreaseTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"decreasettl"},"DecreaseTtl"),(0,a.yg)("p",null,"TTL\u3092\u6e1b\u5c11\u3055\u305b\u308b\u5834\u5408\u306e\u307f\u3001key\u306eTTL\u79d2\u6570\u3092\u6307\u5b9a\u3055\u308c\u305f\u5024\u306b\u6e1b\u3089\u3057\u307e\u3059\u3002"),(0,a.yg)("p",null,"\u4f8b"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"TTL\u304c5\u79d2\u3067\u30013\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u65b0\u3057\u3044TTL\u306f3\u79d2\u306b\u306a\u308a\u307e\u3059\u3002"),(0,a.yg)("li",{parentName:"ul"},"TTL\u304c5\u79d2\u3067\u30016\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001TTL\u306f\u6e1b\u5c11\u3057\u307e\u305b\u3093\u3002")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Bytes"),(0,a.yg)("td",{parentName:"tr",align:null},"\u5024\u306eTTL\u3092\u6e1b\u5c11\u3055\u305b\u308bkey\u306e\u6307\u5b9a\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"ttl"),(0,a.yg)("td",{parentName:"tr",align:null},"Duration"),(0,a.yg)("td",{parentName:"tr",align:null},"\u6e1b\u5c11\u3055\u305b\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002")))),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.DecreaseTtl(ctx, &momento.DecreaseTtlRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.DecreaseTtlSet:\n\tlog.Printf("Successfully decreased TTL for key\\n")\ncase *responses.DecreaseTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"itemgetttl"},"ItemGetTtl"),(0,a.yg)("p",null,"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u304ccache\u304b\u3089\u5931\u52b9\u3059\u308b\u307e\u3067\u306e\u751f\u5b58\u6642\u9593(TTL)\u3092\u8fd4\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"cacheName"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"cache\u306e\u540d\u524d\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"key"),(0,a.yg)("td",{parentName:"tr",align:null},"String ","|"," Byte"),(0,a.yg)("td",{parentName:"tr",align:null},"\u30a2\u30a4\u30c6\u30e0\u306e\u578b\u3092\u8fd4\u3059key\u306e\u6307\u5b9a\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Cache hit")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"remainingTtl()"),": Duration")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Cache miss"),(0,a.yg)("li",{parentName:"ul"},"Cache error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.ItemGetTtl(ctx, &momento.ItemGetTtlRequest{\n\tCacheName: "cache-name",\n\tKey:       momento.String("key"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.ItemGetTtlHit:\n\tlog.Printf("TTL for key is %d\\n", r.RemainingTtl().Milliseconds())\ncase *responses.ItemGetTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h2",{id:"\u8a8d\u8a3capi"},"\u8a8d\u8a3cAPI"),(0,a.yg)("p",null,"\u3053\u308c\u3089\u306eAPI\u306f\u3001Momento\u306e\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3084\u30a2\u30af\u30bb\u30b9\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("h3",{id:"generateauthtoken"},"GenerateAuthToken"),(0,a.yg)("p",null,"\u6307\u5b9a\u3057\u305f\u6a29\u9650\u3068\u6709\u52b9\u671f\u9650\u3092\u6301\u3064\u65b0\u3057\u3044Momento\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"scope"),(0,a.yg)("td",{parentName:"tr",align:null},"TokenScope"),(0,a.yg)("td",{parentName:"tr",align:null},"\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u306b\u4ed8\u4e0e\u3059\u308b\u6a29\u9650\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u69cb\u7bc9\u3055\u308c\u305fTokenScope \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001SDK\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"expiresIn"),(0,a.yg)("td",{parentName:"tr",align:null},"ExpiresIn"),(0,a.yg)("td",{parentName:"tr",align:null},"\u30c8\u30fc\u30af\u30f3\u304c\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u307e\u3067\u306e\u79d2\u6570\u3001\u307e\u305f\u306f",(0,a.yg)("inlineCode",{parentName:"td"},"never"),"\u306e\u6307\u5b9a\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Success")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"authToken"),": string - the new auth token"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"refreshToken"),": string - a refresh token that can be used with the ",(0,a.yg)("inlineCode",{parentName:"li"},"RefreshAuthToken")," API to refresh the token before it expires"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"expiresAt"),": Timestamp - the timestamp at which the token will expire")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"refreshauthtoken"},"RefreshAuthToken"),(0,a.yg)("p",null,"\u65e2\u5b58\u306e\u6709\u52b9\u671f\u9650\u5185\u306eMomento\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u5143\u306e\u30c8\u30fc\u30af\u30f3\u3068\u540c\u3058\u6a29\u9650\u3068\u6709\u52b9\u671f\u9650\u3092\u6301\u3064 \u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"\u540d\u524d"),(0,a.yg)("th",{parentName:"tr",align:null},"\u578b"),(0,a.yg)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"refreshToken"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"\u6700\u521d\u306e",(0,a.yg)("inlineCode",{parentName:"td"},"GenerateAuthToken"),"\u306e\u547c\u3073\u51fa\u3057\u304b\u3089\u53d6\u5f97\u3057\u305f\u3001\u73fe\u5728\u306e\u8a8d\u8a3c\u30c8\u30fc \u30af\u30f3\u306erefreshToken\u3092\u6307\u5b9a\u3002")))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Success")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"authToken"),": string - the new auth token"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"refreshToken"),": string - a refresh token that can be used with the ",(0,a.yg)("inlineCode",{parentName:"li"},"RefreshAuthToken")," API to refresh the token before it expires"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"expiresAt"),": Timestamp - the timestamp at which the token will expire")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Error")),(0,a.yg)("p",null,"\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/response-objects"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002")),(0,a.yg)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",dart:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,a.yg)("h3",{id:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b"},"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b"),(0,a.yg)("p",null,"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306f\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u5fdc\u3058\u3066\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u69cb\u9020\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30dd\u30fc\u30c8\u3055\u308c \u3066\u3044\u308b\u30c7\u30fc\u30bf\u578b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/ja/cache/develop/api-reference/dictionary-collections"},"Dictionaries(\u8f9e\u66f8\u578b)"),"\u306f\u3001\u9806\u5e8f\u306e\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u5024\u306e\u30da\u30a2\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/ja/cache/develop/api-reference/list-collections"},"Lists(\u30ea\u30b9\u30c8\u578b)"),"\u306f\u3001\u9806\u5e8f\u4ed8\u3051\u3089\u308c\u305f\u8981\u7d20\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3001\u5404\u8981\u7d20\u304c\u633f\u5165\u3055\u308c\u305f\u9806\u5e8f\u3067\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/ja/cache/develop/api-reference/set-collections"},"Sets(\u30bb\u30c3\u30c8\u578b)"),"\u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u6587\u5b57\u5217\u306b\u3088\u308b\u3001\u9806\u5e8f\u306e\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/ja/cache/develop/api-reference/sorted-set-collections"},"Sorted Sets(\u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u578b) "),"\u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u9806\u5e8f\u4ed8\u304d\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u5404\u8981\u7d20 \u306f\u3001\u5024:\u30b9\u30b3\u30a2\u306e\u30da\u30a2\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002")),(0,a.yg)("p",null,"\u5229\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u8a73\u3057\u3044\u60c5\u5831\u306f\u3001",(0,a.yg)("a",{parentName:"p",href:"/ja/cache/develop/basics/datatypes"},"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b"),"\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002"))}y.isMDXComponent=!0}}]);