"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[1309],{3043:(e,t,a)=>{a(7294)},7235:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(614),o=a(7294);const i=e=>{let{language:t,code:a}=e;return o.createElement(n.Z,{language:t},a)}},4991:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>h});var n=a(7462),o=(a(7294),a(3905)),i=(a(3043),a(7235));const c={sidebar_position:1,sidebar_label:"Cache",title:"Getting started with Momento Cache in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Cache.",keywords:["momento","cache","caching","topics","pubsub","pub/sub","eda","event-driven architecture","redis","serverless","sdk","sdks","api","examples","resources","getting started","quick start","rust","tokio"]},s="Getting Started with Momento Cache in Rust",r={unversionedId:"sdks/rust/cache",id:"sdks/rust/cache",title:"Getting started with Momento Cache in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Cache.",source:"@site/docs/sdks/rust/cache.mdx",sourceDirName:"sdks/rust",slug:"/sdks/rust/cache",permalink:"/ja/sdks/rust/cache",draft:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/sdks/rust/cache.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Cache",title:"Getting started with Momento Cache in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Cache.",keywords:["momento","cache","caching","topics","pubsub","pub/sub","eda","event-driven architecture","redis","serverless","sdk","sdks","api","examples","resources","getting started","quick start","rust","tokio"]}},l={},h=[{value:"Install the Momento SDK",id:"install-the-momento-sdk",level:2},{value:"Set up your API key",id:"set-up-your-api-key",level:2},{value:"Import libraries and instantiate a CacheClient object",id:"import-libraries-and-instantiate-a-cacheclient-object",level:2},{value:"Create a new cache in Momento Cache",id:"create-a-new-cache-in-momento-cache",level:2},{value:"List the names of existing caches in your account",id:"list-the-names-of-existing-caches-in-your-account",level:2},{value:"Write an item to a cache",id:"write-an-item-to-a-cache",level:2},{value:"Read an item from a cache",id:"read-an-item-from-a-cache",level:2},{value:"Running the code",id:"running-the-code",level:2}],m={toc:h};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started-with-momento-cache-in-rust"},"Getting Started with Momento Cache in Rust"),(0,o.kt)("p",null,"If you need to get going quickly with Rust and Momento Cache, this page contains the basic API calls you'll need. ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/momentohq/client-sdk-rust/tree/main/example"},"Check the Rust SDK examples")," for complete, working examples including build configuration files."),(0,o.kt)("h2",{id:"install-the-momento-sdk"},"Install the Momento SDK"),(0,o.kt)("p",null,"The Momento SDK is available on crates.io: ",(0,o.kt)("a",{parentName:"p",href:"https://crates.io/crates/momento"},(0,o.kt)("inlineCode",{parentName:"a"},"momento")),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Visit ",(0,o.kt)("a",{parentName:"p",href:"https://crates.io/crates/momento"},"crates.io")," to find the latest available version of the SDK.")),(0,o.kt)("p",null,"Install the client library in an existing Rust project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cargo add momento\n")),(0,o.kt)("h2",{id:"set-up-your-api-key"},"Set up your API key"),(0,o.kt)("p",null,"You'll need a Momento API key to authenticate with Momento.  You can get one from the ",(0,o.kt)("a",{parentName:"p",href:"https://console.gomomento.com/caches"},"Momento Web Console"),".\nOnce you have your API key, store it in an environment variable so that the Momento client can consume it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export MOMENTO_API_KEY=<your Momento API key here>\n")),(0,o.kt)("h2",{id:"import-libraries-and-instantiate-a-cacheclient-object"},"Import libraries and instantiate a CacheClient object"),(0,o.kt)("p",null,"This code sets up the main function, the necessary imports, and the CacheClient instantiation that each of the other functions will need to call."),(0,o.kt)(i.Z,{language:"rust",code:'use momento::cache::configurations;\nuse momento::{CacheClient, CredentialProvider, MomentoError};\nuse std::time::Duration;\n\n#[tokio::main]\nasync fn main() -> Result<(), MomentoError> {\n    let _cache_client = CacheClient::builder()\n        .default_ttl(Duration::from_secs(60))\n        .configuration(configurations::Laptop::latest())\n        .credential_provider(CredentialProvider::from_env_var(\n            "MOMENTO_API_KEY".to_string(),\n        )?)\n        .build()?;\n    // ...\n    Ok(())\n}\n',mdxType:"SdkExampleCodeBlockImpl"}),(0,o.kt)("h2",{id:"create-a-new-cache-in-momento-cache"},"Create a new cache in Momento Cache"),(0,o.kt)("p",null,"Use this function to create a new cache in your account."),(0,o.kt)(i.Z,{language:"rust",code:'  match cache_client.create_cache(cache_name).await? {\n      CreateCacheResponse::Created => println!("Cache {} created", cache_name),\n      CreateCacheResponse::AlreadyExists => println!("Cache {} already exists", cache_name),\n  }',mdxType:"SdkExampleCodeBlockImpl"}),(0,o.kt)("h2",{id:"list-the-names-of-existing-caches-in-your-account"},"List the names of existing caches in your account"),(0,o.kt)("p",null,"A simple list of the names of caches for the account."),(0,o.kt)(i.Z,{language:"rust",code:'  let response = cache_client.list_caches().await?;\n  println!("Caches: {:#?}", response.caches);',mdxType:"SdkExampleCodeBlockImpl"}),(0,o.kt)("h2",{id:"write-an-item-to-a-cache"},"Write an item to a cache"),(0,o.kt)("p",null,"A simple example of doing a set operation. In the client.set call, the TTL it optional. If you did pass it in, this would override the default TTL value set with the client object."),(0,o.kt)(i.Z,{language:"rust",code:'  cache_client.set(cache_name, "key", "value").await?;\n  println!("Value stored");',mdxType:"SdkExampleCodeBlockImpl"}),(0,o.kt)("h2",{id:"read-an-item-from-a-cache"},"Read an item from a cache"),(0,o.kt)("p",null,"This is an example of a simple read operation to get an item from a cache."),(0,o.kt)(i.Z,{language:"rust",code:'  let response = cache_client.get(cache_name, "key").await?;\n  let _item: String = response.try_into().expect("I stored a string!");',mdxType:"SdkExampleCodeBlockImpl"}),(0,o.kt)("h2",{id:"running-the-code"},"Running the code"),(0,o.kt)("p",null,"You can find complete, working examples in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/momentohq/client-sdk-rust/tree/main/example"},"Rust SDK github repo examples directory"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Beyond these basic API calls check out the ",(0,o.kt)("a",{parentName:"p",href:"/ja/cache/develop/api-reference/"},"API reference page")," for more information on the full assortment of Momento API calls.")))}d.isMDXComponent=!0}}]);