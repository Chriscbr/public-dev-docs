"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[1549],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(7462),r=n(7294),o=n(6010),l=n(2466),i=n(6550),s=n(1980),c=n(7392),p=n(12);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=h(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=d({queryString:n,groupId:a}),[u,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=s??u;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),k(e)}),[c,k,o]),tabValues:o}}var b=n(2389);const g="tabList__CuJ",f="tabItem_LNqP";function N(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),h=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==i&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:h},l,{className:(0,o.Z)("tabs__item",f,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=k(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g)},r.createElement(N,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function T(e){const t=(0,b.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},3404:(e,t,n)=>{n(7294)},9720:(e,t,n)=>{n.d(t,{X:()=>i});var a=n(4866),r=n(5162),o=n(814),l=n(7294);const i=e=>{let{js:t,python:n,java:i,go:s,csharp:c,php:p,rust:u,ruby:h,elixir:m,cli:d}=e;return t||n||i||s||c||p||u||h||m||d?l.createElement(a.Z,null,t&&l.createElement(r.Z,{value:"js",label:"JavaScript"},l.createElement(o.Z,{language:"js"},t)),n&&l.createElement(r.Z,{value:"python",label:"Python"},l.createElement(o.Z,{language:"python"},n)),i&&l.createElement(r.Z,{value:"java",label:"Java"},l.createElement(o.Z,{language:"java"},i)),s&&l.createElement(r.Z,{value:"go",label:"Go"},l.createElement(o.Z,{language:"go"},s)),c&&l.createElement(r.Z,{value:"csharp",label:"C#"},l.createElement(o.Z,{language:"csharp"},c)),p&&l.createElement(r.Z,{value:"php",label:"PHP"},l.createElement(o.Z,{language:"php"},p)),u&&l.createElement(r.Z,{value:"rust",label:"Rust"},l.createElement(o.Z,{language:"rust"},u)),h&&l.createElement(r.Z,{value:"ruby",label:"Ruby"},l.createElement(o.Z,{language:"ruby"},h)),m&&l.createElement(r.Z,{value:"elixir",label:"Elixir"},l.createElement(o.Z,{language:"elixir"},m)),d&&l.createElement(r.Z,{value:"cli",label:"CLI"},l.createElement(o.Z,{language:"cli"},d))):null}},7737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=(n(3404),n(9720));const l={sidebar_position:7,title:"Auth API reference information",sidebar_label:"Auth",description:"Learn the Auth API calls you need to know about and how to use them with Momento services."},i="Auth API reference",s={unversionedId:"develop/api-reference/auth-tokens",id:"develop/api-reference/auth-tokens",title:"Auth API reference information",description:"Learn the Auth API calls you need to know about and how to use them with Momento services.",source:"@site/docs/develop/api-reference/auth-tokens.md",sourceDirName:"develop/api-reference",slug:"/develop/api-reference/auth-tokens",permalink:"/ja/develop/api-reference/auth-tokens",draft:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/develop/api-reference/auth-tokens.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Auth API reference information",sidebar_label:"Auth",description:"Learn the Auth API calls you need to know about and how to use them with Momento services."},sidebar:"tutorialSidebar",previous:{title:"Topics (Pub/Sub)",permalink:"/ja/develop/api-reference/topics"},next:{title:"CollectionTTL object",permalink:"/ja/develop/api-reference/collections/collectionttl"}},c={},p=[{value:"GenerateAuthToken API",id:"generateauthtoken-api",level:2},{value:"RefreshAuthToken API",id:"refreshauthtoken-api",level:2},{value:"TokenScope objects",id:"tokenscope-objects",level:2},{value:"Permission objects",id:"permission-objects",level:2},{value:"CachePermission",id:"cachepermission",level:3},{value:"TopicPermission",id:"topicpermission",level:3},{value:"TopicScope examples",id:"topicscope-examples",level:4},{value:"FAQ",id:"faq",level:2}],u={toc:p};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"auth-api-reference"},"Auth API reference"),(0,r.kt)("img",{src:"/img/access-tokens.jpg",width:"90%",alt:"a technical illustration of a bank vault representing security, authorization, and authentication."}),(0,r.kt)("p",null,"The auth APIs create and manage authorization tokens for Momento services, known as ",(0,r.kt)("em",{parentName:"p"},"Momento auth tokens"),". Tokens can be scoped to have one or more permissions to grant access to one or more caches or topics."),(0,r.kt)("img",{src:"/img/momento-auth-tokens.png",width:"60%"}),(0,r.kt)("h2",{id:"generateauthtoken-api"},"GenerateAuthToken API"),(0,r.kt)("p",null,"Generates a new Momento auth token with the specified permissions and expiry."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scope"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tokenscope"},"TokenScope")),(0,r.kt)("td",{parentName:"tr",align:null},"The permissions to grant to the new token. Pre-built TokenScope objects are provided by the SDKs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expiresIn"),(0,r.kt)("td",{parentName:"tr",align:null},"Number ","|"," ExpiresIn object"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of seconds until the token expires or an ExpiresIn object representing a duration by calling the ",(0,r.kt)("inlineCode",{parentName:"td"},"ExpiresIn.never()"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ExpiresIn.minutes()"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"ExpiresIn.hours()")," methods.")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Method response object"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Success",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"authToken"),": string - the new auth token"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"refreshToken"),": string - a refresh token that can be used with the ",(0,r.kt)("a",{parentName:"li",href:"#refreshauthtoken"},"RefreshAuthToken API")," to refresh a token before it expires"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expiresAt"),": Timestamp - the timestamp at which the token will expire"))),(0,r.kt)("li",{parentName:"ul"},"Error")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"./response-objects"},"response objects")," for specific information.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Tokens to access the Momento control plane APIs can only be generated using the ",(0,r.kt)("a",{parentName:"p",href:"https://console.gomomento.com/"},"Momento console"),".")),(0,r.kt)(o.X,{js:"const generateTokenResponse = await authClient.generateAuthToken(AllDataReadWrite, ExpiresIn.minutes(30));\nif (generateTokenResponse instanceof GenerateAuthToken.Success) {\n  console.log('Generated an auth token with AllDataReadWrite scope!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`Auth token starts with: ${generateTokenResponse.authToken.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${generateTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${generateTokenResponse.expiresAt.epoch()}`);\n}",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,r.kt)("h2",{id:"refreshauthtoken-api"},"RefreshAuthToken API"),(0,r.kt)("p",null,"Refreshes an existing, unexpired Momento auth token.  Produces a new auth token with the same permissions and expiry duration as the original auth token."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"refreshToken"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The refreshToken for the current auth token, acquired from the original call to ",(0,r.kt)("inlineCode",{parentName:"td"},"GenerateAuthToken"),".")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Method response object"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Success",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"authToken"),": string - the new auth token"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"refreshToken"),": string - a refresh token that can be used with the ",(0,r.kt)("a",{parentName:"li",href:"#refreshauthtoken"},"RefreshAuthToken API")," to refresh the token before it expires"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expiresAt"),": Timestamp - the timestamp at which the token will expire"))),(0,r.kt)("li",{parentName:"ul"},"Error")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"./response-objects"},"response objects")," for specific information.")),(0,r.kt)(o.X,{js:"const generateTokenResponse = await authClient.generateAuthToken(AllDataReadWrite, ExpiresIn.minutes(30));\nif (generateTokenResponse instanceof GenerateAuthToken.Success) {\n  console.log('Generated auth token; refreshing!');\n  const refreshAuthClient = new AuthClient({\n    credentialProvider: CredentialProvider.fromString({authToken: generateTokenResponse.authToken}),\n  });\n  const refreshTokenResponse = await refreshAuthClient.refreshAuthToken(generateTokenResponse.refreshToken);\n  if (refreshTokenResponse instanceof RefreshAuthToken.Success) {\n    console.log('Auth token refreshed!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`Refreshed auth token starts with: ${refreshTokenResponse.authToken.substring(0, 10)}`);\n    console.log(`New refresh token starts with: ${refreshTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Refreshed auth token expires At: ${refreshTokenResponse.expiresAt.epoch()}`);\n  }\n}",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,r.kt)("h2",{id:"tokenscope-objects"},"TokenScope objects"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permissions"),(0,r.kt)("td",{parentName:"tr",align:null},"List <",(0,r.kt)("a",{parentName:"td",href:"#permission-objects"},"Permission"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"The permissions to grant to the new token.")))),(0,r.kt)("p",null,"A TokenScope is an list of ",(0,r.kt)("a",{parentName:"p",href:"#permission-objects"},"permission objects"),". The list can have permissions that are of type ",(0,r.kt)("a",{parentName:"p",href:"#cachepermission"},"CachePermission")," or ",(0,r.kt)("a",{parentName:"p",href:"#topicpermission"},"TopicPermission"),", and can contain ",(0,r.kt)("a",{parentName:"p",href:"../../manage/limits"},"up to ten")," permission objects. A permission only grants access to the Momento data plane APIs (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"set"),", etc.). When an auth token is created with multiple permission objects, any matching permission will grant access. For example, if a single token is created with two permission objects:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A permission object that allows ReadWrite access to all caches for the account "),(0,r.kt)("li",{parentName:"ol"},"A permission object that allows ReadOnly access to cache ",(0,r.kt)("inlineCode",{parentName:"li"},"foo"))),(0,r.kt)("p",null,"In this case, the token will still allow use of data manipulation APIs (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"set"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"delete"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"DictionarySetFields"),", etc.) on cache ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," because of the first permission."),(0,r.kt)("h2",{id:"permission-objects"},"Permission objects"),(0,r.kt)("p",null,"These objects define the specific role with cache or topic information and are then assigned to a ",(0,r.kt)("a",{parentName:"p",href:"#tokenscope"},"TokenScope"),". "),(0,r.kt)("h3",{id:"cachepermission"},"CachePermission"),(0,r.kt)("p",null,"A component of a ",(0,r.kt)("a",{parentName:"p",href:"#tokenscope"},"TokenScope")," object that defines permissions for a cache."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"role"),(0,r.kt)("td",{parentName:"tr",align:null},"ReadOnly ","|"," ReadWrite"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of access granted by the permission.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cache"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AllCaches")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CacheName")),(0,r.kt)("td",{parentName:"tr",align:null},"A permission can be restricted to a select cache by name using a ",(0,r.kt)("inlineCode",{parentName:"td"},"CacheName")," object or ",(0,r.kt)("inlineCode",{parentName:"td"},"AllCaches")," built-in value.")))),(0,r.kt)("p",null,"For role, using ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheRole.ReadOnly")," allows access to all read data plane APIs on caches (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"DictionaryGetField"),", etc.) defined in the CacheSelector. Using ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheRole.ReadWrite")," allows access for all read and write data plane APIs on the caches defined in the CacheSelector. Custom roles are not supported."),(0,r.kt)("p",null,"For cache, the value can be the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"AllCaches")," or a string value containing the name of the cache this permission is for."),(0,r.kt)("h3",{id:"topicpermission"},"TopicPermission"),(0,r.kt)("p",null,"A component of a ",(0,r.kt)("a",{parentName:"p",href:"#tokenscope"},"TokenScope")," object that defines permissions for a token."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"role"),(0,r.kt)("td",{parentName:"tr",align:null},"SubscribeOnly ","|"," PublishSubscribe"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of access granted by the permission.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cache"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AllCaches")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"CacheName")),(0,r.kt)("td",{parentName:"tr",align:null},"A permission can be restricted to a select cache by name using a ",(0,r.kt)("inlineCode",{parentName:"td"},"CacheName")," object or to all caches in the account by using the ",(0,r.kt)("inlineCode",{parentName:"td"},"AllCaches")," built-in value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"topic"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AllTopics")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"TopicName")),(0,r.kt)("td",{parentName:"tr",align:null},"A permission can be restricted to a select topic by name using a ",(0,r.kt)("inlineCode",{parentName:"td"},"TopicName")," object or to all topics in the above cache(s) by using the ",(0,r.kt)("inlineCode",{parentName:"td"},"AllTopics")," built-in value.")))),(0,r.kt)("p",null,"For role, there are two managed roles to assign, ",(0,r.kt)("inlineCode",{parentName:"p"},"TopicRole.PublishSubscribe")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"TopicRole.SubscribeOnly"),". Custom roles are not supported. Using the SubscribeOnly role allows only subscribing to topics, whereas using the PublishSubscribe role allows publishing and subscribing to topics."),(0,r.kt)("p",null,"For cache, only topics within that cache's namespace are allowed by the permission. This can be set to the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"AllCaches")," value or a string specifically naming a cache."),(0,r.kt)("p",null,"For topic, this can be set to the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"AllTopics")," value, which gives access to all topics in the cache(s) defined in cache or it can be a string with a specific topic name."),(0,r.kt)("h4",{id:"topicscope-examples"},"TopicScope examples"),(0,r.kt)("p",null,"This is an example of creating a TokenScope with just CachePermissions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const CachePermissions = {\n    permissions: [\n        {\n            role: CacheRole.ReadWrite, // Managed role\n            cache: "MyCache" // grants access to a specific cache\n        },\n        {\n            role: CacheRole.ReadOnly, // Managed role\n            cache: AllCaches // Built-in value for access to all caches in the account.\n        },\n    ],\n};\n')),(0,r.kt)("p",null,"This is an example of creating a TokenScope with just TopicPermissions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const TopicsPermissions = {\n    permissions: [\n      {\n        role: TopicRole.PublishSubscribe, // Managed role\n        cache: 'the-great-wall', // grants access to a specific cache\n        topic: 'highlights', // grants access to a specific topic\n      },\n      {\n        role: TopicRole.SubscribeOnly, // Built-in role\n        cache: AllCaches, // This is a built-in value for access to all caches in the account\n        topic: AllTopics, // This is a built-in value for access to all topic in the listed cache(s).\n      },\n    ],\n};\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you have any questions not answered here, please jump on ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/2c24SK6W"},"our Discord server")," and ask our experts in the support channel.")),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Can I create a custom role for a cache or topic permission?"),(0,r.kt)("p",null,"No. We only support the managed roles listed above for each permission.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Do these tokens control access to the Momento control plane APIs?"),(0,r.kt)("p",null,"Access tokens generated with the ",(0,r.kt)("a",{parentName:"p",href:"#generateauthtoken"},"GenerateAuthToken")," API only control access to the Momento data plane APIs. A token for access to Momento's control plane APIs must be generated using the ",(0,r.kt)("a",{parentName:"p",href:"https://console.gomomento.com/"},"Momento console"),".")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Can I have write only or publish only permissions?"),(0,r.kt)("p",null,"We do not support 'write only' or 'publish only' permissions. If this is something you need, please ",(0,r.kt)("a",{parentName:"p",href:"mailto:support@momentohq.com"},"contact us")," and let's discuss your needs.")))}h.isMDXComponent=!0}}]);