"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[7521],{5162:(e,t,l)=>{l.d(t,{Z:()=>r});var a=l(7294),n=l(6010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:l,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,r),hidden:l},t)}},4866:(e,t,l)=>{l.d(t,{Z:()=>w});var a=l(7462),n=l(7294),o=l(6010),r=l(2466),i=l(6550),c=l(1980),s=l(7392),u=l(12);function p(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:l,attributes:a,default:n}}=e;return{value:t,label:l,attributes:a,default:n}}))}function d(e){const{values:t,children:l}=e;return(0,n.useMemo)((()=>{const e=t??p(l);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,l])}function h(e){let{value:t,tabValues:l}=e;return l.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:l}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:l}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:t,groupId:l});return[(0,c._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:l=!1,groupId:a}=e,o=d(e),[r,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=l.find((e=>e.default))??l[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[c,s]=m({queryString:l,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(l);return[a,(0,n.useCallback)((e=>{l&&o.set(e)}),[l,o])]}({groupId:a}),T=(()=>{const e=c??p;return h({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{T&&i(T)}),[T]);return{selectedValue:r,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),f(e)}),[s,f,o]),tabValues:o}}var T=l(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:l,selectedValue:i,selectValue:c,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),d=e=>{const t=e.currentTarget,l=u.indexOf(t),a=s[l].value;a!==i&&(p(t),c(a))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const l=u.indexOf(e.currentTarget)+1;t=u[l]??u[0];break}case"ArrowLeft":{const l=u.indexOf(e.currentTarget)-1;t=u[l]??u[u.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},t)},s.map((e=>{let{value:t,label:l,attributes:r}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:d},r,{className:(0,o.Z)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":i===t})}),l??t)})))}function k(e){let{lazy:t,children:l,selectedValue:a}=e;const o=(Array.isArray(l)?l:[l]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=f(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},n.createElement(v,(0,a.Z)({},e,t)),n.createElement(k,(0,a.Z)({},e,t)))}function w(e){const t=(0,T.Z)();return n.createElement(y,(0,a.Z)({key:String(t)},e))}},3404:(e,t,l)=>{l(7294)},9720:(e,t,l)=>{l.d(t,{X:()=>i});var a=l(4866),n=l(5162),o=l(614),r=l(7294);const i=e=>{let{js:t,python:l,java:i,go:c,csharp:s,php:u,rust:p,ruby:d,elixir:h,swift:m,cli:f}=e;return t||l||i||c||s||u||p||d||h||m||f?r.createElement(a.Z,null,t&&r.createElement(n.Z,{value:"js",label:"JavaScript"},r.createElement(o.Z,{language:"js"},t)),l&&r.createElement(n.Z,{value:"python",label:"Python"},r.createElement(o.Z,{language:"python"},l)),i&&r.createElement(n.Z,{value:"java",label:"Java"},r.createElement(o.Z,{language:"java"},i)),c&&r.createElement(n.Z,{value:"go",label:"Go"},r.createElement(o.Z,{language:"go"},c)),s&&r.createElement(n.Z,{value:"csharp",label:"C#"},r.createElement(o.Z,{language:"csharp"},s)),u&&r.createElement(n.Z,{value:"php",label:"PHP"},r.createElement(o.Z,{language:"php"},u)),p&&r.createElement(n.Z,{value:"rust",label:"Rust"},r.createElement(o.Z,{language:"rust"},p)),d&&r.createElement(n.Z,{value:"ruby",label:"Ruby"},r.createElement(o.Z,{language:"ruby"},d)),h&&r.createElement(n.Z,{value:"elixir",label:"Elixir"},r.createElement(o.Z,{language:"elixir"},h)),m&&r.createElement(n.Z,{value:"swift",label:"Swift"},r.createElement(o.Z,{language:"swift"},m)),f&&r.createElement(n.Z,{value:"cli",label:"CLI"},r.createElement(o.Z,{language:"cli"},f))):null}},5891:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var a=l(7462),n=(l(7294),l(3905)),o=(l(3404),l(9720));const r={sidebar_position:10,sidebar_label:"CollectionTTL object",title:"CollectionTTL API reference",description:"Learn how to interact with the CollectionTTL object in Momento Cache."},i="CollectionTTL object API reference",c={unversionedId:"cache/develop/api-reference/collection-ttl",id:"cache/develop/api-reference/collection-ttl",title:"CollectionTTL API reference",description:"Learn how to interact with the CollectionTTL object in Momento Cache.",source:"@site/docs/cache/develop/api-reference/collection-ttl.md",sourceDirName:"cache/develop/api-reference",slug:"/cache/develop/api-reference/collection-ttl",permalink:"/cache/develop/api-reference/collection-ttl",draft:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/api-reference/collection-ttl.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"CollectionTTL object",title:"CollectionTTL API reference",description:"Learn how to interact with the CollectionTTL object in Momento Cache."},sidebar:"tutorialSidebar",previous:{title:"HTTP API",permalink:"/cache/develop/api-reference/http-api"},next:{title:"Response objects",permalink:"/cache/develop/api-reference/response-objects"}},s={},u=[{value:"Compatible data types",id:"compatible-data-types",level:2},{value:"Default Behavior",id:"default-behavior",level:2},{value:"Examples",id:"examples",level:2},{value:"Constructor parameters",id:"constructor-parameters",level:2},{value:"Additional constructors",id:"additional-constructors",level:2},{value:"Instance methods",id:"instance-methods",level:2}],p={toc:u},d="wrapper";function h(e){let{components:t,...l}=e;return(0,n.kt)(d,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"collectionttl-object-api-reference"},"CollectionTTL object API reference"),(0,n.kt)("p",null,"The CollectionTtl type is used when performing write operations on a collection."),(0,n.kt)("p",null,"Sometimes, when you update a collection, you want to refresh the TTL. Other times you want to keep the TTL the same. The\nCollectionTtl parameter allows you to specify this behavior."),(0,n.kt)("p",null,"The default behavior is that the collection TTL is reset whenever a write operation occurs. You cannot provide a CollectionTTL object when performing a read operation like ",(0,n.kt)("inlineCode",{parentName:"p"},"dictionaryFetch")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"listLength"),". "),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"/cache/learn/how-it-works/expire-data-with-ttl"},"Expire Data with TTL")," for more information on how TTL works with Momento Cache."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The CollectionTTL specifies the TTL for the entire collection, ",(0,n.kt)("em",{parentName:"p"},"not")," for setting the TTL of individual elements within a collection. The elements within will not expire if the collection does not expire.")),(0,n.kt)("h2",{id:"compatible-data-types"},"Compatible data types"),(0,n.kt)("p",null,"The CollectionTTL object is compatible with the following ",(0,n.kt)("a",{parentName:"p",href:"/cache/develop/basics/datatypes#collection-data-types-cdts"},"collection data types")," ",(0,n.kt)("em",{parentName:"p"},"when performing write operations"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cache/develop/api-reference/dictionary-collections"},"Dictionary")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cache/develop/api-reference/list-collections"},"List")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cache/develop/api-reference/set-collections"},"Set")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cache/develop/api-reference/sorted-set-collections"},"Sorted Set"))),(0,n.kt)("p",null,"As the image below illustrates, collections are considered ",(0,n.kt)("inlineCode",{parentName:"p"},"items")," that may contain ",(0,n.kt)("inlineCode",{parentName:"p"},"elements"),". "),(0,n.kt)("img",{src:"/img/collection_data_types.png",alt:"Collection data types drawing | Momento Cache",width:"80%"}),(0,n.kt)("h2",{id:"default-behavior"},"Default Behavior"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"CollectionTtl")," parameter is optional for all collection write operations."),(0,n.kt)("li",{parentName:"ul"},"If a CollectionTTL is not specified, a default value of ",(0,n.kt)("inlineCode",{parentName:"li"},"CollectionTtl.fromCacheTtl()")," will be used. This value is the default TTL configured on the cache client. "),(0,n.kt)("li",{parentName:"ul"},"The TTL for the collection will be refreshed any time the collection is modified.")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"If you need a behavior other than the default, you can provide a CollectionTtl object for any collection write operation."),(0,n.kt)("p",null,"To specify an explicit TTL to refresh the collection to on a write operation, you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"CollectionTtl.of()"),":"),(0,n.kt)(o.X,{js:"CollectionTtl.of(20 * 60); // 20 minutes",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,n.kt)("p",null,"This is a convenience method that is equivalent to calling the constructor directly:"),(0,n.kt)(o.X,{js:"const ttlSeconds = 20 * 60; // 20 minutes\nconst refreshTtl = true;\nnew CollectionTtl(ttlSeconds, refreshTtl);",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,n.kt)("p",null,"If you want to specify a TTL that is only set when the collection is created, but not refreshed on subsequent writes, you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"withNoRefreshTtlOnUpdates()"),":"),(0,n.kt)(o.X,{js:"CollectionTtl.of(20 * 60).withNoRefreshTtlOnUpdates(); // 20 minutes, only when collection is created",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,n.kt)("p",null,"This is also a convenience method that is equivalent to calling the constructor directly:"),(0,n.kt)(o.X,{js:"const ttlSeconds = 20 * 60; // 20 minutes\nconst refreshTtl = false;\nnew CollectionTtl(ttlSeconds, refreshTtl);",python:"",java:"",go:"",csharp:"",php:"",rust:"",ruby:"",elixir:"",swift:"",cli:"",mdxType:"SdkExampleTabsImpl"}),(0,n.kt)("h2",{id:"constructor-parameters"},"Constructor parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ttl"),": duration - (optional)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If no TTL is given, the TTL set in the current client connection object is used."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"refreshTtl"),": boolean = true",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If set to true, the collection\u2019s TTL will be reset to the provided value."),(0,n.kt)("li",{parentName:"ul"},"If set to false, the existing TTL set on the collection is retained.")))),(0,n.kt)("h2",{id:"additional-constructors"},"Additional constructors"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"fromCacheTtl()"),": CollectionTtl - uses the client\u2019s TTL, equivalent to ",(0,n.kt)("inlineCode",{parentName:"li"},"CollectionTtl(null, true)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"of(ttl: duration)"),": CollectionTtl - equivalent to ",(0,n.kt)("inlineCode",{parentName:"li"},"CollectionTtl(ttl, true)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"refreshTtlIfProvided(ttl?: duration)"),": CollectionTtl - if a value is provided, it will refresh the collection's TTL. If no value is provided, it will not refresh the TTL.")),(0,n.kt)("h2",{id:"instance-methods"},"Instance methods"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ttlSeconds()"),": duration - Returns the TTL in seconds"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ttlMilliseconds()"),": duration - Returns the TTL in milliseconds"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"refreshTtl()"),": boolean - Sets if the TTL should be refreshed when the item is modified"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"withRefreshTtlOnUpdates()"),": CollectionTtl - a copy, but refresh is true"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"withNoRefreshTtlOnUpdates()"),": CollectionTtl - a copy, but refresh is false"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"toString()"),": displays the TTL in seconds and the refreshTtl configuration")))}h.isMDXComponent=!0}}]);