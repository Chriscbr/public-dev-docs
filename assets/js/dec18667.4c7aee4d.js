"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[7495],{3043:(e,o,t)=>{t(7294)},7235:(e,o,t)=>{t.d(o,{Z:()=>a});var n=t(614),s=t(7294);const a=e=>{let{language:o,code:t}=e;return s.createElement(n.Z,{language:o},t)}},4544:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(7462),s=(t(7294),t(3905)),a=(t(3043),t(7235));const i={sidebar_position:6,sidebar_label:"Compression",title:"Using compression in your Momento Node.js code",description:"Learn how to compress your data when using the Momento Node.js SDK",keywords:["momento","cache","configuration","sdk","production ready","typescript","node.js","nodejs","javascript","compression","zstd"]},r="Using compression in the Momento Node.js SDK",c={unversionedId:"sdks/nodejs/compression",id:"sdks/nodejs/compression",title:"Using compression in your Momento Node.js code",description:"Learn how to compress your data when using the Momento Node.js SDK",source:"@site/docs/sdks/nodejs/compression.mdx",sourceDirName:"sdks/nodejs",slug:"/sdks/nodejs/compression",permalink:"/sdks/nodejs/compression",draft:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/sdks/nodejs/compression.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"Compression",title:"Using compression in your Momento Node.js code",description:"Learn how to compress your data when using the Momento Node.js SDK",keywords:["momento","cache","configuration","sdk","production ready","typescript","node.js","nodejs","javascript","compression","zstd"]}},d={},l=[{value:"Enabling compression",id:"enabling-compression",level:2},{value:"Compressing your data",id:"compressing-your-data",level:2},{value:"More Examples",id:"more-examples",level:2}],p={toc:l};function m(e){let{components:o,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,t,{components:o,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"using-compression-in-the-momento-nodejs-sdk"},"Using compression in the Momento Node.js SDK"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"get"),"/",(0,s.kt)("inlineCode",{parentName:"p"},"set")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"getBatch"),"/",(0,s.kt)("inlineCode",{parentName:"p"},"setBatch")," cache methods in the Momento Node.js SDK support ",(0,s.kt)("a",{parentName:"p",href:"https://facebook.github.io/zstd/"},"ZSTD")," compression. If your data is compressible, enabling compression can significantly decrease the amount of data sent to Momento at the cost of increased CPU usage."),(0,s.kt)("h2",{id:"enabling-compression"},"Enabling compression"),(0,s.kt)("p",null,"To avoid adding extra dependencies, the Momento Node.js SDK does not include compression by default. To add it, you'll need to install the ",(0,s.kt)("inlineCode",{parentName:"p"},"sdk-nodejs-compression")," dependency:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cli"},"npm install @gomomento/sdk-nodejs-compression\n")),(0,s.kt)("p",null,"Once that is installed, you can enable compression by adding a compression strategy to the cache client configuration:"),(0,s.kt)(a.Z,{language:"javascript",code:"",mdxType:"SdkExampleCodeBlockImpl"}),(0,s.kt)("p",null,"If you want to be able to compress data, but don't want the SDK to automatically decompress it, you can also configure that:"),(0,s.kt)(a.Z,{language:"javascript",code:"",mdxType:"SdkExampleCodeBlockImpl"}),(0,s.kt)("h2",{id:"compressing-your-data"},"Compressing your data"),(0,s.kt)("p",null,"With the dependency installed and the client configured, you can specify ",(0,s.kt)("inlineCode",{parentName:"p"},"compress: true")," when calling set or setBatch to compress that value:"),(0,s.kt)(a.Z,{language:"javascript",code:"const result = await cacheClient.set(cacheName, 'test-key', 'test-value', {compress: true});\nif (result instanceof CacheSet.Success) {\n  console.log(\"Key 'test-key' stored successfully\");\n} else if (result instanceof CacheSet.Error) {\n  throw new Error(\n    `An error occurred while attempting to store key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",mdxType:"SdkExampleCodeBlockImpl"}),(0,s.kt)("p",null,"If automatic decompression is enabled, you won't need to change your get or getBatch calls. You can specify ",(0,s.kt)("inlineCode",{parentName:"p"},"decompress: true")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"decompress: false")," if you want to override the automatic decompression setting:"),(0,s.kt)(a.Z,{language:"javascript",code:"const result = await cacheClient.get(cacheName, 'test-key', {decompress: false});\nif (result instanceof CacheGet.Hit) {\n  console.log(`Retrieved value for key 'test-key': ${result.valueString()}`);\n} else if (result instanceof CacheGet.Miss) {\n  console.log(`Key 'test-key' was not found in cache '${cacheName}'`);\n} else if (result instanceof CacheGet.Error) {\n  throw new Error(\n    `An error occurred while attempting to get key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",mdxType:"SdkExampleCodeBlockImpl"}),(0,s.kt)("p",null,"Uncompressed data will be unaffected by the compression configuration."),(0,s.kt)("h2",{id:"more-examples"},"More Examples"),(0,s.kt)("p",null,"You can find a complete example of a client getting and setting compressed data in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/momentohq/client-sdk-javascript/blob/main/examples/nodejs/compression"},"JavaScript SDK GitHub repository.")))}m.isMDXComponent=!0}}]);